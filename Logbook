Wednesday 7th September 2022:

I have coded a Python file that allows for a deck of cards to be built, a number of players to be
instantiated with names and stacks, and for each player to be dealt a hand from the deck.
Inspiration from: https://www.youtube.com/watch?v=t8YkjDH86Y4&t=136s

The next step is finding a way to lay down a flop, turn and river while saving the information
of the current hands and stacks. I will need to revisit my python book to help me with this.
I will worry about betting on hands later on, and developing an AI is much further down the line.

I might also try to get Griffin involved to help create a UI.



Thursday 8th September 2022:

I have managed to code a class for the board and member functions to lay down a flop, turn and river.
I did this using input statements. I now need to create a pot and create player actions.

I have coded player actions for: fold, bet and call. Technically I can use these actions for check
and raise as well by concurrently betting 0 and an amount that is greater than the current bet.
I have an idea for using logic statements to enforce rules for when a bet is not met with another raise.
Also need to add an action for paying blinds.

I have now also made code for a pot class, including the ability to collect player bets and
to empty the pot. Currently have no way of identifying a winner so will put a pin in transferring
the money in the pot to the winner of the round.

I have just made an official project directory and online repository, including main and this logbook.
This line is testing that the github repo is working.


Monday 12th September 2022:

Temporarily working on Dad's old desktop while my laptop is getting fixed.

I have just made an action method that requests a player do one of:
check, fold, bet, raise or call. I also coded some logic to ensure that the move is legal, and if not then the action is retaken.


Thursday 15th September 2022:

A class method to ask for actions from all the players has been added to assist in running of the methods. This will have to be editted once the dealer button is made and the order of play changes.

Noticed that something weird is going on with folding. Players cannot fold and continue the turn. Fixed, this was due to an error in the code.

Now when a player folds, its skips the turn of who is directly next.
The problem is that when a player is removed from the player_in_hand list, the for loop skips the next one. Fixed by incorporating a new method that identifies folders.

Also added the pot to the chain of command. Creating one big function for this chain of command will be very useful.


Friday 16th September 2022:

Adapted the action method to make it recursive under certain if statements. This allows for raises to be met and the play to loop around the table when they haven't been met.

After having added an all in option, I've noticed that there is a problem with betting more than the player has. This will needed to be appended in the methods with some logic.
This has now been fixed. I also changed some of the code so that it is impossible to ever have a negative stack and for the game to skip your turn if you have 0 stack but haven't folded.

One problem is that there is no way of creating a side pot or for a big stack to be refunded when they're called for an all in. This will need to be addressed at some point, possibly with a sidepot child class.

Also still need to create a dealer button to change order of play between games.

For the moment, all of the game mechanics for player actions seems to be working as it should be. This will of course need to be play-tested with a nice UI, but for the moment I shall assume it is bug free. The next challenge is finding a way to determine who has the winning hand. For this I think I will have to do some research.


Monday 19th September 2022:

https://codereview.stackexchange.com/questions/128702/poker-hands-in-python

Used the code from above to develop a function to evaluate a hand. Still need to figure out tie-breakers and for how we can use this function to incorporate both the player's cards and the board.


Tuesday 20th September 2022:

Now we have a function hand_interpreter that translates the output of eval_hand into English.

We also now have a function that can figure out the highest class of hand that a player has. Note that it cannot yet figure out the EXACT best hand because the function doesn't have tie breaker just yet. This is the next challenge, for which I will use some logic.

The tie-breaker function is now coded and implemented in the highest hand function. We can now deduce exactly what a player's best hand is!

The code will need to be slightly modified for when we are comparing two players' hands, but this should not be too hard.

I have also now addressed the above problem, and added functionality for a split pot. We can now determine the winner of a game. Just need to add a method for transferring the pot to the winner's stack. This is now done!

The next step is to code in the blinds and the dealer button to alternate order of play. Also eventually the issue of sidepots and refunds on an all in will need to be addressed. However, I'd be happy to begin work on a UI before then as this is a small often unnecesary game mechanic.

https://www.888poker.com/poker/poker-odds-calculator


Wedesday 21st September 2022:

I have now added a dealer and blinds mechanism. By default the first instantiated player starts as the dealer, and the button will move onto whoever is next. One still occuring problem is that the order of play isn't changing yet based on the position of the button. This will need to be addressed.

This has been addressed by using a method to shuffle the list of players, provided at: https://stackoverflow.com/questions/2150108/efficient-way-to-rotate-a-list-in-python
This also has made paying blinds much easier so a new blinds method has also been made, the blinds_dictionary is no longer necessary.
We can now collect blinds and change the order of play!


Thursday 22nd September 2022:

Made small update to collect_blinds_two so that players have to call the blinds rather than paying nothing to be in the hand.


Saturday 24th September 2022:

I am now going to attempt to make a GUI for this game. I will be using the package Tkinter, with a lot of help from the following tutorial:
https://www.youtube.com/watch?v=YXPyB4XeYLA


Sunday 25th September 2022:

Now working on my laptop again.


Sunday 2nd October 2022:

Cleaned up some of the syntax. If functionality is found to suddenly be bugging, come back to version before this one.
